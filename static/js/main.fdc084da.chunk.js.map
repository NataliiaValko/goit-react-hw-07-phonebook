{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/ContactItem/ContactItem.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","service/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Container/Container.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/App/App.js","index.js","components/App/App.module.css"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","state","payload","filter","id","_","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","axios","defaults","baseURL","contactsApi","getContacts","get","then","data","addContact","contact","post","deleteContact","delete","contactsOperations","dispatch","catch","error","getItems","getFilter","contactsSelectors","getVisibleItems","createSelector","item","name","toLowerCase","includes","number","Container","children","className","s","container","Section","nameForClass","ContactForm","useSelector","useDispatch","useState","setName","setNumber","handleGetValue","e","currentTarget","value","Error","onSubmit","newName","preventDefault","find","addNotification","title","message","type","insert","animationIn","animationOut","dismiss","duration","onScreen","label","input","onChange","placeholder","pattern","required","button","Filter","trim","icon","ContactItem","link","href","wrapper","onClick","ContactList","list","map","App","useEffect","visibleItems","header","newContactWrapper","newContactTitle","titleContacts","text","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdc084da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__3I5_s\",\"input\":\"ContactForm_input__2nTU3\",\"button\":\"ContactForm_button__33w9R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"Filter_icon__1r4Kq\",\"label\":\"Filter_label__Z-EJ_\",\"input\":\"Filter_input__E0gw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2tuku\",\"item\":\"ContactList_item__CTCYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-contact\":\"Section_new-contact__3gaFT\",\"section\":\"Section_section__1hEWE\",\"sectionList\":\"Section_sectionList__1GmGJ Section_section__1hEWE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__TLnKL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"ContactItem_link__28DCq\",\"name\":\"ContactItem_name__2Z3cD\",\"wrapper\":\"ContactItem_wrapper__3H1LX\",\"icon\":\"ContactItem_icon__ySmx9\",\"number\":\"ContactItem_number__1s-qq\",\"button\":\"ContactItem_button__oHew4\"};","// import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction('contacts/getContactsRequest');\r\nexport const getContactsSuccess = createAction('contacts/getContactsSuccess');\r\nexport const getContactsError = createAction('contacts/getContactsError');\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  getContactsSuccess,\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [getContactsSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n  REHYDRATE,\r\n} from 'redux-persist';\r\nimport contactsReducer from 'redux/contacts/contacts-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: contactsReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost: 3000';\r\n\r\nconst getContacts = () => {\r\n  return axios.get('/contacts').then(({ data }) => data);\r\n};\r\n\r\nconst addContact = contact => {\r\n  return axios.post('/contacts', contact).then(({ data }) => data);\r\n};\r\n\r\nconst deleteContact = id => {\r\n  return axios.delete(`/contacts/${id}`);\r\n};\r\n\r\nconst contactsApi = { getContacts, addContact, deleteContact };\r\nexport default contactsApi;\r\n","import axios from 'axios';\r\nimport contactsApi from 'service/contacts-api';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nconst getContacts = () => dispatch => {\r\n  dispatch(getContactsRequest());\r\n\r\n  contactsApi\r\n    .getContacts()\r\n    .then(data => dispatch(getContactsSuccess(data)))\r\n    .catch(error => dispatch(getContactsError(error)));\r\n};\r\n\r\nconst addContact = contact => dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  contactsApi\r\n    .addContact(contact)\r\n    .then(data => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  contactsApi\r\n    .deleteContact(id)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\nconst contactsOperations = { addContact, deleteContact, getContacts };\r\n\r\nexport default contactsOperations;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getItems = state => state.items;\r\n\r\nconst getFilter = state => state.filter;\r\n\r\nconst getVisibleItems = createSelector(\r\n  [getItems, getFilter],\r\n  (items, filter) => {\r\n    return items.filter(\r\n      item =>\r\n        item.name.toLowerCase().includes(filter.toLowerCase()) ||\r\n        item.number.includes(filter),\r\n    );\r\n  },\r\n);\r\n\r\nconst contactsSelectors = { getItems, getFilter, getVisibleItems };\r\n\r\nexport default contactsSelectors;\r\n","import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\nimport Container from 'components/Container';\n\nconst Section = ({ nameForClass, children }) => (\n  <section className={s[`${nameForClass}`]}>\n    <Container>{children}</Container>\n  </section>\n);\n\nexport default Section;\n\nSection.propTypes = {\n  nameForClass: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors } from 'redux/contacts';\nimport { store } from 'react-notifications-component';\nimport { contactsOperations } from 'redux/contacts';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const items = useSelector(contactsSelectors.getItems);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleGetValue = e => {\n    const field = e.currentTarget.name;\n\n    switch (field) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n      default:\n        throw new Error();\n    }\n  };\n\n  const showNotification = () => {\n    store.addNotification({\n      title: 'Oops!',\n      message:\n        'But there’s already a contact with that name on your contact list',\n      type: 'danger',\n      insert: 'top',\n      container: 'top-right',\n      animationIn: ['animate__animated', 'animate__fadeIn'],\n      animationOut: ['animate__animated', 'animate__fadeOut'],\n      dismiss: {\n        duration: 3000,\n        onScreen: true,\n      },\n    });\n  };\n\n  const repeatCheck = newName => {\n    return items.find(({ name }) => name === newName);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (repeatCheck(name)) {\n      showNotification();\n      return;\n    }\n\n    dispatch(contactsOperations.addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          value={name}\n          onChange={handleGetValue}\n          placeholder=\"Elon Reeve Musk\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          value={number}\n          onChange={handleGetValue}\n          placeholder=\"1-800-613-8840\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\" aria-label=\"button-submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { changeFilter } from 'redux/contacts';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors } from 'redux/contacts';\nimport { GoSearch } from 'react-icons/go';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n  const handleFilterValue = e =>\n    dispatch(changeFilter(e.currentTarget.value.trim()));\n\n  return (\n    <label className={s.label}>\n      <input\n        className={s.input}\n        placeholder=\"Enter to search...\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilterValue}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n      <GoSearch className={s.icon} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { FiPhoneCall } from 'react-icons/fi';\nimport { contactsOperations } from 'redux/contacts';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <a className={s.link} href=\"tel:{number}\">\n        <p className={s.name}>{name}</p>\n        <div className={s.wrapper}>\n          <FiPhoneCall className={s.icon} />\n          <p className={s.number}>{number}</p>\n        </div>\n      </a>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => dispatch(contactsOperations.deleteContact(id))}\n        aria-label=\"delete contact\"\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { contactsSelectors } from '../../redux/contacts';\nimport ContactItem from 'components/ContactItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const items = useSelector(contactsSelectors.getVisibleItems);\n\n  return (\n    <ul className={s.list}>\n      {items.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          <ContactItem id={id} name={name} number={number} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import ReactNotification from 'react-notifications-component';\nimport { useEffect } from 'react';\nimport 'react-notifications-component/dist/theme.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\nimport Section from 'components/Section';\nimport Container from 'components/Container';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\n\nimport s from './App.module.css';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.getContacts()), [dispatch]);\n\n  const visibleItems = useSelector(contactsSelectors.getVisibleItems);\n\n  return (\n    <>\n      <ReactNotification />\n      <header className={s.header}>\n        <Container>\n          <h1 className={s.title}>My phonebook</h1>\n        </Container>\n      </header>\n      <Section nameForClass={'section'}>\n        <div className={s.newContactWrapper}>\n          <h2 className={s.newContactTitle}>A new contact</h2>\n          <ContactForm />\n        </div>\n      </Section>\n      <Section nameForClass={'sectionList'}>\n        <h2 className={s.titleContacts}>Contacts</h2>\n        <Filter />\n        {visibleItems[0] ? (\n          <ContactList />\n        ) : (\n          <p className={s.text}>There’s nothing here yet...</p>\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nrender(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__3eytA\",\"title\":\"App_title__3YDth\",\"newContactWrapper\":\"App_newContactWrapper__1y9kI\",\"newContactTitle\":\"App_newContactTitle__2uLff\",\"titleContacts\":\"App_titleContacts__2sVTa\",\"text\":\"App_text__VZ0bo\"};"],"sourceRoot":""}